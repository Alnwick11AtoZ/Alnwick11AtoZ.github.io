[{"title":"IntelliJ IDEA 导入 GeoServer 工程","url":"/2022/03/12/IntelliJ%20IDEA%20%E5%AF%BC%E5%85%A5%20GeoServer%20%E5%B7%A5%E7%A8%8B/","content":"0. 克隆 GeoServer Git 仓库\nGitHub 仓库地址：https://github.com/geoserver/geoserver\nGitHub 克隆地址：https://github.com/geoserver/geoserver.git\n\n1. 加载为 Maven 工程 ，且 Maven Profile 全部不勾选 ， 并刷新 Maven 下载工程所需依赖\n若无法下载 GeoTools 相关依赖 , 请先暂时删除 Maven 的 settings.xml 文件再刷新 Maven\n\n2. 给 org/geoserver/wcs/kvp/rangesubset/AbstractContentNode.java 添加 Node 的引用/* (c) 2014 Open Source Geospatial Foundation - all rights reserved * (c) 2001 - 2013 OpenPlans * This code is licensed under the GPL 2.0 license, available at the root * application directory. */package org.geoserver.wcs.kvp.rangesubset;import javax.xml.soap.Node;/** * Abstract node that add the concept of a node content * * @author Andrea Aime - TOPP */public abstract class AbstractContentNode implements Node &#123;    protected String content;    public String getContent() &#123;        return content;    &#125;    public void setContent(String content) &#123;        this.content = content;    &#125;&#125;\n\n3. 注释掉 org/geoserver/wcs/kvp/RangeSubsetKvpParser.java 下面的 org.geoserver.wcs.kvp.rangesubset.* 相关引用及 RangeSubsetKvpParserVisitor 静态类/* (c) 2014 Open Source Geospatial Foundation - all rights reserved * (c) 2001 - 2013 OpenPlans * This code is licensed under the GPL 2.0 license, available at the root * application directory. */package org.geoserver.wcs.kvp;import static org.vfny.geoserver.wcs.WcsException.WcsExceptionCode.InvalidParameterValue;import java.io.StringReader;import net.opengis.ows11.CodeType;import net.opengis.ows11.Ows11Factory;import net.opengis.wcs11.AxisSubsetType;import net.opengis.wcs11.FieldSubsetType;import net.opengis.wcs11.RangeSubsetType;import net.opengis.wcs11.Wcs111Factory;import org.geoserver.ows.KvpParser;//import org.geoserver.wcs.kvp.rangesubset.ASTAxisId;//import org.geoserver.wcs.kvp.rangesubset.ASTAxisSubset;//import org.geoserver.wcs.kvp.rangesubset.ASTFieldId;//import org.geoserver.wcs.kvp.rangesubset.ASTFieldSubset;//import org.geoserver.wcs.kvp.rangesubset.ASTInterpolation;//import org.geoserver.wcs.kvp.rangesubset.ASTKey;//import org.geoserver.wcs.kvp.rangesubset.ASTRangeSubset;//import org.geoserver.wcs.kvp.rangesubset.Node;//import org.geoserver.wcs.kvp.rangesubset.RangeSubsetParser;//import org.geoserver.wcs.kvp.rangesubset.RangeSubsetParserVisitor;//import org.geoserver.wcs.kvp.rangesubset.SimpleNode;import org.vfny.geoserver.wcs.WcsException;/** * Parses the RangeSubset parameter of a GetFeature KVP request * * @author Andrea Aime */public class RangeSubsetKvpParser extends KvpParser &#123;    public RangeSubsetKvpParser() &#123;        super(&quot;RangeSubset&quot;, RangeSubsetType.class);    &#125;    @Override    public Object parse(String value) throws Exception &#123;//        RangeSubsetParser parser = new RangeSubsetParser(new StringReader(value));//        SimpleNode root = parser.RangeSubset();//        RangeSubsetType result =//                (RangeSubsetType) root.jjtAccept(new RangeSubsetKvpParserVisitor(), null);////        for (Object o : result.getFieldSubset()) &#123;//            FieldSubsetType type = (FieldSubsetType) o;//            String interpolationType = type.getInterpolationType();//            if (interpolationType != null) &#123;//                try &#123;//                    InterpolationMethod.valueOf(interpolationType);//                &#125; catch (IllegalArgumentException e) &#123;//                    throw new WcsException(//                            &quot;Unknown interpolation method &quot; + interpolationType,//                            InvalidParameterValue,//                            &quot;RangeSubset&quot;);//                &#125;//            &#125;//        &#125;        return 0;    &#125;//    private static class RangeSubsetKvpParserVisitor implements RangeSubsetParserVisitor &#123;//        Wcs111Factory wcsf = Wcs111Factory.eINSTANCE;//        Ows11Factory owsf = Ows11Factory.eINSTANCE;////        @Override//        public Object visit(SimpleNode node, Object data) &#123;//            throw new UnsupportedOperationException(&quot;This method should never be reached&quot;);//        &#125;////        @Override//        @SuppressWarnings(&quot;unchecked&quot;) // EMF model without generics//        public Object visit(ASTRangeSubset node, Object data) &#123;//            RangeSubsetType rs = wcsf.createRangeSubsetType();//            for (int i = 0; i &lt; node.jjtGetNumChildren(); i++) &#123;//                ASTFieldSubset fs = (ASTFieldSubset) node.jjtGetChild(i);//                FieldSubsetType fst = (FieldSubsetType) fs.jjtAccept(this, data);//                rs.getFieldSubset().add(fst);//            &#125;//            return rs;//        &#125;////        @Override//        @SuppressWarnings(&quot;unchecked&quot;) // EMF model without generics//        public Object visit(ASTFieldSubset node, Object data) &#123;//            FieldSubsetType fs = wcsf.createFieldSubsetType();////            for (int i = 0; i &lt; node.jjtGetNumChildren(); i++) &#123;//                Node child = node.jjtGetChild(i);//                if (child instanceof ASTFieldId) &#123;//                    CodeType id = owsf.createCodeType();//                    id.setValue((String) child.jjtAccept(this, null));//                    fs.setIdentifier(id);//                &#125; else if (child instanceof ASTInterpolation) &#123;//                    fs.setInterpolationType((String) child.jjtAccept(this, null));//                &#125; else if (child instanceof ASTAxisSubset) &#123;//                    fs.getAxisSubset().add(child.jjtAccept(this, null));//                &#125;//            &#125;//            return fs;//        &#125;////        @Override//        @SuppressWarnings(&quot;unchecked&quot;) // EMF model without generics//        public Object visit(ASTAxisSubset node, Object data) &#123;//            AxisSubsetType as = wcsf.createAxisSubsetType();//            as.setIdentifier(((SimpleNode) node.jjtGetChild(0)).getContent());//            for (int i = 1; i &lt; node.jjtGetNumChildren(); i++) &#123;//                as.getKey().add(node.jjtGetChild(i).jjtAccept(this, null));//            &#125;//            return as;//        &#125;////        @Override//        public Object visit(ASTFieldId node, Object data) &#123;//            return node.getContent();//        &#125;////        @Override//        public Object visit(ASTAxisId node, Object data) &#123;//            return node.getContent();//        &#125;////        @Override//        public Object visit(ASTInterpolation node, Object data) &#123;//            return node.getContent();//        &#125;////        @Override//        public Object visit(ASTKey node, Object data) &#123;//            return node.getContent();//        &#125;//    &#125;&#125;\n\n4. 清除 IntelliJ IDEA 缓存（也可以忽略此步直接启动项目）\n5. 编辑 org/geoserver/web/Start.java 启动配置 \n6. 提前 Build Module &#39;gs-web-sec-core&#39;\n7. 运行 org/geoserver/web/Start.java 的 main 函数\n控制台打印如下\n三月 08, 2022 9:19:53 下午 org.geoserver.web.Start main严重: GeoServer startup complete in 9.755s\n\n访问 http://localhost:8080/geoserver/web \n\n\n\n","categories":["Geographic Information System"],"tags":["GeoServer"]},{"title":"ts(MPEG2-TS) 视频文件无损转换 mp4(MPEG-4) 视频文件","url":"/2022/03/12/ts%5BMPEG2-TS%5D%20%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6%E6%97%A0%E6%8D%9F%E8%BD%AC%E6%8D%A2%20mp4%5BMPEG-4%5D%20%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6/","content":"1 准备 FFmpeg官方网站：https://ffmpeg.org/\n1.1 Microsoft Windows\n从 https://www.gyan.dev/ffmpeg/builds/ 下载 ffmpeg-release-full.7z\n\n\n\n\n\n \n\n\n解压缩 ffmpeg-release-full.7z ,进入到 bin 目录找到 ffmpeg.exe 即为所需\n\n\n\n\n\n1.2 Mac OS略\n1.3 Linux略\n2 转换2.1 创建批处理脚本\n在 bin 目录下 新建文本文档 run.txt 并添加以下内容\n\necho offclsfor %%a in (&quot;*.ts&quot;) do .\\ffmpeg -i &quot;%%a&quot; -f mp4 -codec copy &quot;%%~na.mp4pause\n\n\n修改 run.txt 后缀为 bat 即可\n\n2.2 运行脚本\n双击 run.bat 即将本目录下的 .ts 视频文件无损转换成 同名 .mp4 视频文件\n\n","categories":["Other"],"tags":["Video"]},{"title":"Tomcat 容器部署 GeoServer 集群","url":"/2022/03/12/Tomcat%20%E5%AE%B9%E5%99%A8%E9%83%A8%E7%BD%B2%20GeoServer%20%E9%9B%86%E7%BE%A4/","content":"1 总体技术总体技术是通过 Nginx 做负载均衡，通过 Redis 和 Tomcat 实现 Session 共享，通过 ActiveMQ 实现各个实例的同步。\n2 官网介绍2.1 相关页面\nhttps://docs.geoserver.org/2.19.x/en/user/index.html\nhttps://docs.geoserver.org/2.19.x/en/user/community/jms-cluster/index.html\n\n2.2 结构图\n3 部署3.1 版本信息\n\n\n软件\n版本\n强依赖\n部署方式\n\n\n\nRedis\nlatest\n否\nDocker\n\n\nActiveMQ\nlatest\n否\nDocker\n\n\nJava Development Kit\n8\n是\n直接部署\n\n\nTomcat\n9\n是\n直接部署\n\n\nGeoServer\n2.19\n是\n直接部署\n\n\n3.1 Docker 部署 Redis略。\n3.2 Docker 部署 ActiveMQ略。\n3.3 部署 JDK 8略，务必配置 JDK 8 环境变量。\n3.4 在 Tomcat 部署 GeoServer 集群3.4.1 部署 Tomcat# 1. 从 https://tomcat.apache.org/download-90.cgi 下载最新版本 Tomcat 9\tExample : apache-tomcat-9.0.56.tar.gz# 2. 解压 apache-tomcat-9.0.56.tar.gz\ttar zxvf apache-tomcat-9.0.56.tar.gz\n\n3.4.2 部署 GeoServer# 1. 从 https://build.geoserver.org/geoserver/2.19.x/ 下载\tExample : geoserver-2.19.x-latest-war.zip# 2. 解压 geoserver-2.19.x-latest-war.zip 并将解压文件 geoserver.war 拷贝到\tExample : /app/apache-tomcat-9.0.56/webapps/# 3. 解压 geoserver.war \tunzip geoserver.war -d ./geoserver# 4. 检测 GeroServer 是否部署\t启动 Tomcat -&gt; sh /app/apache-tomcat-9.0.56/bin/catalina.sh start\t访问 http://$&#123;&#123;IP&#125;&#125;:8080/geoserver/web，出现 GeoServer 页面则部署成功\n\n3.4.3 GeoServer 安装 JMS based Clustering 插件（基于 JMS 的集群插件）# 1. 从 https://build.geoserver.org/geoserver/2.19.x/community-latest/ 下载 \tExample : geoserver-2.19-SNAPSHOT-jms-cluster-plugin.zip# 2. 解压 geoserver-2.19-SNAPSHOT-jms-cluster-plugin.zip，将其中所有 jar 包拷贝到\tExample : /app/apache-tomcat-9.0.56/webapps/geoserver/WEB-INF/lib# 3. 编辑 GeoServer 集群相关配置文件\tExample : /app/apache-tomcat-9.0.56/webapps/geoserver/data/cluster/cluster.properties# 注意 ：JMS based Clustering 插件版本需与 GeoServer 版本一致\n\n# ... 略 ...# 允许连接 ActiveMQconnection=enabled# ActiveMQ URLbrokerURL=tpc\\://172.0.0.1\\:61616# 是否启用内嵌 ActiveMQembeddedBroker=disabled# ... 略 ...\n\n3.5 通过 Redis 实现 Tomcat 的 Session 共享3.5.1 准备 Tomcat Clustering Redis Session Manager\nhttps://github.com/ran-jit/tomcat-cluster-redis-session-manager\n\n# 1. 从  /app/apache-tomcat-9.0.56/webapps/geoserver/WEB-INF/lib 下将 commons-pool2-x.x.x.jar 和 commons-logging-x.x.x.jar 拷贝到\tExample : /app/apache-tomcat-9.0.56/lib# 2. 从 https://mvnrepository.com/artifact/redis.clients/jedis 下载\tExample : jedis-3.7.0.jar# 3. 从 https://github.com/ran-jit/tomcat-cluster-redis-session-manager/wiki 下载 \tExample : \t\ttomcat-cluster-redis-session-manager-4.0.jar\t\tredis-data-cache.properties# 4. 将 jedis-3.7.0.jar 和 tomcat-cluster-redis-session-manager-4.0.jar 拷贝到\tExample : /app/apache-tomcat-9.0.56/lib# 注意 : 先将 /app/apache-tomcat-9.0.56/lib 下的以上 4 个 jar \n3.5.2 配置 Tomcat Clustering Redis Session Manager# 5. 拷贝 redis-data-cache.properties 文件到 /app/apache-tomcat-9.0.56/conf 目录下并更新文件以配置 Redis 服务器信息\t即配置上文部署的 Redis 相关信息# 6. 新增 2 行代码到 Tomcat 下 conf 文件夹中的 context.xml 文件，如下所示 :\t新增的两行 :\t\t&lt;Valve className=&quot;tomcat.request.session.redis.SessionHandlerValve&quot; /&gt;\t\t&lt;Manager className=&quot;tomcat.request.session.redis.SessionManager&quot; /&gt;# Example : context.xml 完整的代码 :\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!--  Licensed to the Apache Software Foundation (ASF) under one or more  contributor license agreements.  See the NOTICE file distributed with  this work for additional information regarding copyright ownership.  The ASF licenses this file to You under the Apache License, Version 2.0  (the &quot;License&quot;); you may not use this file except in compliance with  the License.  You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.--&gt;&lt;!-- The contents of this file will be loaded for each web application --&gt;&lt;Context&gt;    &lt;!-- Default set of monitored resources. If one of these changes, the    --&gt;    &lt;!-- web application will be reloaded.                                   --&gt;    &lt;WatchedResource&gt;WEB-INF/web.xml&lt;/WatchedResource&gt;    &lt;WatchedResource&gt;WEB-INF/tomcat-web.xml&lt;/WatchedResource&gt;    &lt;WatchedResource&gt;$&#123;catalina.base&#125;/conf/web.xml&lt;/WatchedResource&gt;    &lt;!-- Uncomment this to disable session persistence across Tomcat restarts --&gt;    &lt;!--    &lt;Manager pathname=&quot;&quot; /&gt;    --&gt;    &lt;Valve className=&quot;tomcat.request.session.redis.SessionHandlerValve&quot; /&gt;    &lt;Manager className=&quot;tomcat.request.session.redis.SessionManager&quot; /&gt;&lt;/Context&gt;\n\n# 7. 在 /app/apache-tomcat-9.0.56/conf/web.xml 文件验证 Session 过期时间 (非必要步骤)\n\n&lt;session-config&gt;  &lt;session-timeout&gt;60&lt;/session-timeout&gt;&lt;/session-config&gt;\n\n3.6 Docker 部署 Nginx# 1. 拉取 Nginx 镜像\tdocker pull nginx# 2. 启动 Nginx\tdocker run --rm -d -p 80:80 --name geoserver-nginx -v /app/nginx/html:/usr/share/nginx/html -v /app/nginx/conf:/etc/nginx -v /app/nginx/logs:/var/log/nginx ngxin:latest# 3. 在 /app/nginx/conf/nginx.conf ( 即 Nginx 容器的 /etc/nginx/nginx.conf ) 中最下面新增 1 行如下 :\tinclude /etc/nginx/conf.d/*.conf;# Exammple : /etc/nginx/nginx.conf 完整代码 :\n\n#user  nobody;worker_processes  1;#error_log  logs/error.log;#error_log  logs/error.log  notice;#error_log  logs/error.log  info;#pid        logs/nginx.pid;events &#123;    worker_connections  1024;&#125;http &#123;    include       mime.types;    default_type  application/octet-stream;    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;    #access_log  logs/access.log  main;    sendfile        on;    #tcp_nopush     on;    #keepalive_timeout  0;    keepalive_timeout  65;    #gzip  on;    server &#123;        listen       80;        server_name  localhost;        #charset koi8-r;        #access_log  logs/host.access.log  main;        location / &#123;            root   html;            index  index.html index.htm;        &#125;        #error_page  404              /404.html;        # redirect server error pages to the static page /50x.html        #        error_page   500 502 503 504  /50x.html;        location = /50x.html &#123;            root   html;        &#125;        # proxy the PHP scripts to Apache listening on 127.0.0.1:80        #        #location ~ \\.php$ &#123;        #    proxy_pass   http://127.0.0.1;        #&#125;        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000        #        #location ~ \\.php$ &#123;        #    root           html;        #    fastcgi_pass   127.0.0.1:9000;        #    fastcgi_index  index.php;        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;        #    include        fastcgi_params;        #&#125;        # deny access to .htaccess files, if Apache&#x27;s document root        # concurs with nginx&#x27;s one        #        #location ~ /\\.ht &#123;        #    deny  all;        #&#125;    &#125;    # another virtual host using mix of IP-, name-, and port-based configuration    #    #server &#123;    #    listen       8000;    #    listen       somename:8080;    #    server_name  somename  alias  another.alias;    #    location / &#123;    #        root   html;    #        index  index.html index.htm;    #    &#125;    #&#125;    # HTTPS server    #    #server &#123;    #    listen       443 ssl;    #    server_name  localhost;    #    ssl_certificate      cert.pem;    #    ssl_certificate_key  cert.key;    #    ssl_session_cache    shared:SSL:1m;    #    ssl_session_timeout  5m;    #    ssl_ciphers  HIGH:!aNULL:!MD5;    #    ssl_prefer_server_ciphers  on;    #    location / &#123;    #        root   html;    #        index  index.html index.htm;    #    &#125;    #&#125;\tinclude /etc/nginx/conf.d/*.conf;&#125;\n\n# 4. 新增 geoserver.conf 到  /app/nginx/conf/conf.d/ ( 即 Nginx 容器的 /etc/nginx/conf.d/ ) 目录下\n\nupstream mygeoserver &#123;\tip_hash;\t# 几个 Tomcat 服务器就配置几个\tserver xxx.xxx.xxx.xxx:xxxx;\tserver xxx.xxx.xxx.xxx:xxxx;\tserver xxx.xxx.xxx.xxx:xxxx;&#125;server &#123;    listen       80;    server_name  localhost;    location /geoserver/ &#123;        proxy_pass   http://mygeoserver/geoserer/;        proxy_set_header   Host $host:$server_port;    &#125;    error_page 500 502 503 504 /50x.html;    location = /50x.html &#123;    \troot   html;    &#125;&#125;\n\n# 注意 : 可以不配置 ip_hash ，因为统一做了 Session 共享拦截# 5. 重启 Nginx\tdocker restart geoserver-nginx\n","categories":["Geographic Information System"],"tags":["GeoServer"]}]